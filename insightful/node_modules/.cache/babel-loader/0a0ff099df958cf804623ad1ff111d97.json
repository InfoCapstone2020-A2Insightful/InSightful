{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nathan\\\\go\\\\src\\\\Insightful\\\\insightful\\\\src\\\\Metrics.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Button, ButtonGroup, ButtonToolbar } from 'reactstrap';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardGroup } from 'reactstrap';\nimport './css/Metrics.css';\nimport './index.js';\nimport { DashBoard } from './DashBoard';\nexport class Metrics extends Component {\n  render() {\n    let messageA = React.createElement(MetricAreaCard, {\n      metricName: \"Test\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, messageA);\n  }\n\n} // Represents a single metric button to render. A single metric card will contain the name of the metric\n// and acts as a link to the dashboard of the respective metric. \n\nclass MetricAreaCard extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.metricName));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/nathan/go/src/Insightful/insightful/src/Metrics.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Button","ButtonGroup","ButtonToolbar","Card","CardImg","CardText","CardBody","CardTitle","CardDeck","CardGroup","DashBoard","Metrics","render","messageA","MetricAreaCard","props","metricName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAoD,kBAApD;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,aAA9B,QAAkD,YAAlD;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,SAA5C,EAAuDC,QAAvD,EAAiEC,SAAjE,QAAkF,YAAlF;AACA,OAAO,mBAAP;AACA,OAAO,YAAP;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,OAAN,SAAsBhB,SAAtB,CAAgC;AACnCiB,EAAAA,MAAM,GAAG;AAEL,QAAIC,QAAQ,GAAG,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,QADL,CADJ;AAKH;;AAVkC,C,CAavC;AACA;;AACA,MAAMC,cAAN,SAA6BnB,SAA7B,CAAuC;AACnCiB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKG,KAAL,CAAWC,UAApB,CADJ,CADJ;AAKH;;AAPkC","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport { Button, ButtonGroup, ButtonToolbar} from 'reactstrap';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardGroup } from 'reactstrap';\r\nimport './css/Metrics.css';\r\nimport './index.js';\r\n\r\nimport { DashBoard } from './DashBoard';\r\n\r\nexport class Metrics extends Component {\r\n    render() {\r\n\r\n        let messageA = <MetricAreaCard metricName=\"Test\"/>;\r\n\r\n        return(\r\n            <div>\r\n                {messageA}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Represents a single metric button to render. A single metric card will contain the name of the metric\r\n// and acts as a link to the dashboard of the respective metric. \r\nclass MetricAreaCard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button>{this.props.metricName}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}