{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nathan\\\\go\\\\src\\\\Insightful\\\\insightful\\\\src\\\\Metrics.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Button, ButtonGroup, ButtonToolbar } from 'reactstrap';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardGroup } from 'reactstrap';\nimport './css/Metrics.css';\nimport './index.js';\nimport { DashBoard } from './DashBoard';\nexport class Metrics extends Component {\n  render() {\n    return (// Eventually need to pass in metric values as props from app.js...\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/Metrics/:metricID\",\n        component: DashBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"CDS\",\n        metricID: \"CDS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Clinical Training\",\n        metricID: \"Clinical Training\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"EB Training\",\n        metricID: \"EB Training\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Eye Bank Partners\",\n        metricID: \"Eye Bank Partners\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Finance\",\n        metricID: \"Finance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Global Donor Operations\",\n        metricID: \"Global Donor Operations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Human Resources\",\n        metricID: \"Human Resources\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"MA\",\n        metricID: \"MA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Policy & Advocacy\",\n        metricID: \"Policy & Advocacy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Prevention\",\n        metricID: \"Prevention\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Quality\",\n        metricID: \"Quality\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Training\",\n        metricID: \"Training\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(MetricAreaCard, {\n        metricName: \"Interventions\",\n        metricID: \"Interventions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))\n    );\n  }\n\n} // Represents a single metric button to render. A single metric card will contain the name of the metric\n// and acts as a link to the dashboard of the respective metric. \n\nclass MetricAreaCard extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/Metrics/' + this.props.metricID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.metricName));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/nathan/go/src/Insightful/insightful/src/Metrics.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Button","ButtonGroup","ButtonToolbar","Card","CardImg","CardText","CardBody","CardTitle","CardDeck","CardGroup","DashBoard","Metrics","render","MetricAreaCard","props","metricID","metricName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport { Button, ButtonGroup, ButtonToolbar} from 'reactstrap';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardGroup } from 'reactstrap';\r\nimport './css/Metrics.css';\r\nimport './index.js';\r\n\r\nimport { DashBoard } from './DashBoard';\r\n\r\nexport class Metrics extends Component {\r\n    render() {\r\n\r\n\r\n\r\n        return(\r\n\r\n            // Eventually need to pass in metric values as props from app.js...\r\n            <div>\r\n                <Route path=\"/Metrics/:metricID\" component={DashBoard} />\r\n\r\n\r\n                <MetricAreaCard metricName=\"CDS\" metricID=\"CDS\"/>\r\n                <MetricAreaCard metricName=\"Clinical Training\" metricID=\"Clinical Training\"/>\r\n                <MetricAreaCard metricName=\"EB Training\" metricID=\"EB Training\"/>\r\n                <MetricAreaCard metricName=\"Eye Bank Partners\" metricID=\"Eye Bank Partners\"/>\r\n                <MetricAreaCard metricName=\"Finance\" metricID=\"Finance\"/>\r\n                <MetricAreaCard metricName=\"Global Donor Operations\" metricID=\"Global Donor Operations\"/>\r\n                <MetricAreaCard metricName=\"Human Resources\" metricID=\"Human Resources\"/>\r\n                <MetricAreaCard metricName=\"MA\" metricID=\"MA\"/>\r\n                <MetricAreaCard metricName=\"Policy & Advocacy\" metricID=\"Policy & Advocacy\"/>\r\n                <MetricAreaCard metricName=\"Prevention\" metricID=\"Prevention\"/>\r\n                <MetricAreaCard metricName=\"Quality\" metricID=\"Quality\"/>\r\n                <MetricAreaCard metricName=\"Training\" metricID=\"Training\"/>\r\n                <MetricAreaCard metricName=\"Interventions\" metricID=\"Interventions\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Represents a single metric button to render. A single metric card will contain the name of the metric\r\n// and acts as a link to the dashboard of the respective metric. \r\nclass MetricAreaCard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to={'/Metrics/' + this.props.metricID}>{this.props.metricName}</Link>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}