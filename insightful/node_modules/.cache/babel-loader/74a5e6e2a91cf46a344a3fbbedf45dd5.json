{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nathan\\\\go\\\\src\\\\Insightful\\\\insightful\\\\src\\\\App.js\";\nimport './css/App.css';\nimport React, { Component } from 'react';\nimport { Route, Redirect, Switch, NavLink } from 'react-router-dom';\nimport { About } from './About';\nimport { HistoricalData } from './HistoricalData';\nimport { Metrics } from './Metrics';\nimport { DataEntry } from './DataEntry';\nimport { FAQ } from './FAQ';\nimport { SignIn } from './SignIn';\nimport { DashBoard } from './DashBoard';\nimport firebase from 'firebase/app';\nimport SightLife from './img/sightlife.png';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMetricsList = routerProps => {\n      let rootPath = firebase.database().ref('metricAreas'); // Put all the metric areas in the this.state.metrics\n\n      rootPath.once('value', snapshot => {\n        let metricNameInfo = snapshot.val();\n        let databaseKeys = Object.keys(metricNameInfo);\n        let metricArray = databaseKeys.map(key => {\n          console.log(key); // let metricItem = metricNameInfo[key]\n\n          let metricItem = key;\n          return metricItem;\n        });\n        this.setState(state => {\n          state.metrics = metricArray;\n          return state;\n        });\n      });\n      return React.createElement(Metrics, Object.assign({}, routerProps, {\n        metrics: this.state.metrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    };\n\n    this.renderDashBoardPage = routerProps => {\n      // Need to iterate through each metric goal and see \n      let rootPath = firebase.database().ref('metricGoals');\n      return React.createElement(DashBoard, Object.assign({}, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    };\n\n    let metricMap = new Map();\n    this.state = {\n      email: '',\n      password: '',\n      metrics: []\n    };\n  } // // Get component to listen to authorization changes\n  // componentDidMount() {\n  //   this.authUnSubFunction = firebase.auth().onAuthStateChanged((firebaseUser) => {\n  //     if (firebaseUser) {\n  //       this.setState({\n  //         user: firebaseUser,\n  //         loading: false \n  //       })\n  //     } else {\n  //       this.setState({\n  //         user: null,\n  //         loading: false\n  //       })\n  //     }\n  //   })\n  // }\n  // // Stop listening for auth cnanges once component is unmounted\n  // componentWillUnmount() {\n  //   this.authUnSubFunction();\n  // }\n  // Callback for rendering metrics page. \n\n\n  render() {\n    let content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      id: \"nav-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/About\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/HistoricalData\",\n      component: HistoricalData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/Metrics\",\n      render: this.renderMetricsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/DataEntry\",\n      component: DataEntry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/FAQ\",\n      component: FAQ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/SignIn\",\n      component: SignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/About\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"inSightful Footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" This project is a part of the:\", React.createElement(\"a\", {\n      className: \"Data\",\n      href: \"https://ischool.uw.edu/capstone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Capstone Project course at the University of Washington Information School \")))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nclass NavBar extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"navbar navbar-expand-lg navbar-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"navbar-brand\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: SightLife,\n      alt: \"SightLife logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"navbar-toggler\",\n      value: \"Show and Hide Navigation Bar\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarTogglerDemo02\",\n      \"aria-controls\": \"navbarTogglerDemo02\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"navbar-toggler-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"collapse navbar-collapse\",\n      id: \"navbarTogglerDemo02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav ml-auto mt-2 mt-lg-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/About\",\n      className: \"nav-link\",\n      activeClassName: \"selected\",\n      activeStyle: {\n        fontWeight: \"bold\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"About\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/Metrics\",\n      className: \"nav-link\",\n      activeClassName: \"selected\",\n      activeStyle: {\n        fontWeight: \"bold\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Metrics\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/HistoricalData\",\n      className: \"nav-link\",\n      activeClassName: \"selected\",\n      activeStyle: {\n        fontWeight: \"bold\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Historical Data\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/DataEntry\",\n      className: \"nav-link\",\n      activeClassName: \"selected\",\n      activeStyle: {\n        fontWeight: \"bold\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Data Entry\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/FAQ\",\n      className: \"nav-link\",\n      activeClassName: \"selected\",\n      activeStyle: {\n        fontWeight: \"bold\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"FAQ\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/SignIn\",\n      className: \"nav-link\",\n      activeClassName: \"selected\",\n      activeStyle: {\n        fontWeight: \"bold\",\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"SignIn\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/nathan/go/src/Insightful/insightful/src/App.js"],"names":["React","Component","Route","Redirect","Switch","NavLink","About","HistoricalData","Metrics","DataEntry","FAQ","SignIn","DashBoard","firebase","SightLife","App","constructor","props","renderMetricsList","routerProps","rootPath","database","ref","once","snapshot","metricNameInfo","val","databaseKeys","Object","keys","metricArray","map","key","console","log","metricItem","setState","state","metrics","renderDashBoardPage","metricMap","Map","email","password","render","content","NavBar","fontWeight","color"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,OAAlC,QAAiD,kBAAjD;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAG1Be,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoCnBC,iBApCmB,GAoCEC,WAAD,IAAiB;AACnC,UAAIC,QAAQ,GAAGP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,CAAwB,aAAxB,CAAf,CADmC,CAGnC;;AACAF,MAAAA,QAAQ,CAACG,IAAT,CAAc,OAAd,EAAwBC,QAAD,IAAc;AACnC,YAAIC,cAAc,GAAGD,QAAQ,CAACE,GAAT,EAArB;AACA,YAAIC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYJ,cAAZ,CAAnB;AACA,YAAIK,WAAW,GAAGH,YAAY,CAACI,GAAb,CAAkBC,GAAD,IAAS;AACxCC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADwC,CAExC;;AACA,cAAIG,UAAU,GAAGH,GAAjB;AACA,iBAAOG,UAAP;AACH,SALiB,CAAlB;AAMA,aAAKC,QAAL,CAAeC,KAAD,IAAW;AACvBA,UAAAA,KAAK,CAACC,OAAN,GAAgBR,WAAhB;AACA,iBAAOO,KAAP;AACD,SAHD;AAID,OAbD;AAeA,aAAO,oBAAC,OAAD,oBACGlB,WADH;AAED,QAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWC,OAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAKD,KA5DkB;;AAAA,SA+DnBC,mBA/DmB,GA+DIpB,WAAD,IAAiB;AACrC;AACA,UAAIC,QAAQ,GAAGP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,CAAwB,aAAxB,CAAf;AAGA,aAAO,oBAAC,SAAD,oBACGH,WADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAID,KAxEkB;;AAGjB,QAAIqB,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AAEA,SAAKJ,KAAL,GAAa;AACTK,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTL,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKD,GAbyB,CAe1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;;AAuCAM,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEvC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAEC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,MAAM,EAAE,KAAKW,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,SAAS,EAAET,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAEC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CAPF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAgE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAC,iCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAAhE,CADF,CADF,CAnBF,CADF;AA4BA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkC,OADH,CADF;AAKD;;AA/GyB;;AAkH5B,MAAMC,MAAN,SAAqB7C,SAArB,CAA+B;AAC7B2C,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,MAAA,IAAI,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE9B,SAAV;AAAqB,MAAA,GAAG,EAAC,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAME;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,KAAK,EAAC,8BAAzC;AAAwE,MAAA,IAAI,EAAC,QAA7E;AAAsF,qBAAY,UAAlG;AAA6G,qBAAY,sBAAzH;AACE,uBAAc,qBADhB;AACsC,uBAAc,OADpD;AAC4D,oBAAW,mBADvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,EAWE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,EAAE,EAAC,qBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,UAA/B;AAA0C,MAAA,eAAe,EAAC,UAA1D;AAAqE,MAAA,WAAW,EAAE;AAAEiC,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,UAAjC;AAA4C,MAAA,eAAe,EAAC,UAA5D;AAAuE,MAAA,WAAW,EAAE;AAAED,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAJF,EAOE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAC,UAAxC;AAAmD,MAAA,eAAe,EAAC,UAAnE;AAA8E,MAAA,WAAW,EAAE;AAAED,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAPF,EAUE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAC,UAAnC;AAA8C,MAAA,eAAe,EAAC,UAA9D;AAAyE,MAAA,WAAW,EAAE;AAAED,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAVF,EAaE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,UAA7B;AAAwC,MAAA,eAAe,EAAC,UAAxD;AAAmE,MAAA,WAAW,EAAE;AAAED,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAbF,EAgBE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAA2C,MAAA,eAAe,EAAC,UAA3D;AAAsE,MAAA,WAAW,EAAE;AAAED,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAhBF,CADF,CAXF,CADF;AAoCD;;AAtC4B;;AAyC/B,eAAejC,GAAf","sourcesContent":["import './css/App.css';\r\nimport React, { Component } from 'react';\r\nimport { Route, Redirect, Switch, NavLink } from 'react-router-dom';\r\nimport { About } from './About';\r\nimport { HistoricalData } from './HistoricalData';\r\nimport { Metrics } from './Metrics';\r\nimport { DataEntry } from './DataEntry';\r\nimport { FAQ } from './FAQ';\r\nimport { SignIn } from './SignIn';\r\nimport { DashBoard } from './DashBoard';\r\n\r\nimport firebase from 'firebase/app';\r\nimport SightLife from './img/sightlife.png';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let metricMap = new Map()\r\n\r\n    this.state = {\r\n        email: '',\r\n        password: '',\r\n        metrics: []\r\n    };\r\n  }\r\n\r\n  // // Get component to listen to authorization changes\r\n  // componentDidMount() {\r\n  //   this.authUnSubFunction = firebase.auth().onAuthStateChanged((firebaseUser) => {\r\n  //     if (firebaseUser) {\r\n  //       this.setState({\r\n  //         user: firebaseUser,\r\n  //         loading: false \r\n  //       })\r\n  //     } else {\r\n  //       this.setState({\r\n  //         user: null,\r\n  //         loading: false\r\n  //       })\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  // // Stop listening for auth cnanges once component is unmounted\r\n  // componentWillUnmount() {\r\n  //   this.authUnSubFunction();\r\n  // }\r\n\r\n\r\n  // Callback for rendering metrics page. \r\n  renderMetricsList = (routerProps) => {\r\n    let rootPath = firebase.database().ref('metricAreas')\r\n\r\n    // Put all the metric areas in the this.state.metrics\r\n    rootPath.once('value', (snapshot) => {\r\n      let metricNameInfo = snapshot.val();\r\n      let databaseKeys = Object.keys(metricNameInfo);\r\n      let metricArray = databaseKeys.map((key) => {\r\n          console.log(key);\r\n          // let metricItem = metricNameInfo[key]\r\n          let metricItem = key;\r\n          return metricItem;\r\n      });\r\n      this.setState((state) => {\r\n        state.metrics = metricArray;\r\n        return state;\r\n      })\r\n    });\r\n\r\n    return <Metrics\r\n          {...routerProps}\r\n          metrics={this.state.metrics}\r\n          />\r\n\r\n  }\r\n\r\n  // Callback for rendering the dash page. Takes in component parameter for all existing metrics\r\n  renderDashBoardPage = (routerProps) => {\r\n    // Need to iterate through each metric goal and see \r\n    let rootPath = firebase.database().ref('metricGoals');\r\n\r\n\r\n    return <DashBoard\r\n          {...routerProps}\r\n\r\n          />\r\n  }\r\n\r\n  render() {\r\n    let content = (\r\n      <div>\r\n        <header>\r\n          <nav id=\"nav-bar\">\r\n            <NavBar />\r\n          </nav>\r\n        </header>\r\n\r\n        <main>\r\n          <Switch>\r\n            <Route exact path=\"/About\" component={About} />\r\n            <Route path=\"/HistoricalData\" component={HistoricalData} />\r\n            <Route path=\"/Metrics\" render={this.renderMetricsList} />\r\n            <Route exact path=\"/DataEntry\" component={DataEntry} />\r\n            <Route path=\"/FAQ\" component={FAQ} />\r\n            <Route path='/SignIn' component={SignIn} />\r\n            <Redirect to=\"/About\"/>\r\n          </Switch>\r\n        </main>\r\n\r\n        <footer>\r\n          <div className=\"footer-container\">\r\n            <p className=\"inSightful Footer\"> This project is a part of the:<a className=\"Data\" href=\"https://ischool.uw.edu/capstone\">Capstone Project course at the University of Washington Information School </a></p>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar navbar-expand-lg navbar-light\">\r\n\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          <img src={SightLife} alt=\"SightLife logo\"/>\r\n        </a>\r\n\r\n        <button className=\"navbar-toggler\" value=\"Show and Hide Navigation Bar\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\"\r\n          aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n          <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to='/About' className=\"nav-link\" activeClassName=\"selected\" activeStyle={{ fontWeight: \"bold\", color: \"red\" }}>About</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to='/Metrics' className=\"nav-link\" activeClassName=\"selected\" activeStyle={{ fontWeight: \"bold\", color: \"red\" }}>Metrics</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to='/HistoricalData' className=\"nav-link\" activeClassName=\"selected\" activeStyle={{ fontWeight: \"bold\", color: \"red\" }}>Historical Data</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to='/DataEntry' className=\"nav-link\" activeClassName=\"selected\" activeStyle={{ fontWeight: \"bold\", color: \"red\" }}>Data Entry</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to='/FAQ' className=\"nav-link\" activeClassName=\"selected\" activeStyle={{ fontWeight: \"bold\", color: \"red\" }}>FAQ</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to='/SignIn' className=\"nav-link\" activeClassName=\"selected\" activeStyle={{ fontWeight: \"bold\", color: \"red\" }}>SignIn</NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}