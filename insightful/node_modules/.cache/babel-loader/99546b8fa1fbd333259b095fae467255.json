{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nathan\\\\go\\\\src\\\\insightful\\\\insightful\\\\src\\\\DashBoard.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Table, Button, ButtonGroup, ButtonToolbar } from 'reactstrap';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardGroup } from 'reactstrap';\nimport './index.js';\nimport './css/DashBoard.css';\nimport firebase from 'firebase/app';\nexport class DashBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMetricMonthly = () => {\n      let rootPath = firebase.database().ref('metricGoalsMonths');\n      let monthMap = new Map();\n      rootPath.once('value', snapshot => {\n        let info = snapshot.val();\n        let keys = Object.keys(info);\n        keys.map(key => {\n          let intKey = parseInt(key, 10); // If the our prop of metric calculation IDs contains the ID, add it to the month map.\n\n          if (this.props.metricAreaCalculationIDs.includes(intKey)) {\n            monthMap.set(key, info[key]);\n          }\n        });\n        console.log(monthMap);\n        this.setMonthCalculations(monthMap);\n      });\n    };\n\n    this.state = {\n      metricAreaCalculationsMonth: new Map()\n    };\n  } // Do any information retrieval here\n\n\n  componentDidMount() {\n    this.renderMetricMonthly();\n  }\n\n  setMonthCalculations(map) {\n    this.setState(state => {\n      console.log(map);\n      state.metricAreaCalculationsMonth = map;\n      return state;\n    });\n  }\n\n  render() {\n    let metricElements = Array.from(this.props.metricAreaCalculations.entries()).map(key => {\n      //Pass metricName, metricID into metricAreaCard as props then also pass in a list of props containing information about that specific metric\n      return React.createElement(MetricCalculationRow, {\n        metrics: key[1].metric,\n        metricCalc: key[1].metricCalculation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    });\n    let metricMonthlies = Array.from(this.state.metricAreaCalculationsMonth.entries()).map(key => {\n      return React.createElement(MetricMonthly, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", this.props.metricAreaInfo, \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", this.props.metricAreaID, \" \"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Metric Area Summary \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Owner: \", this.props.metricAreaOwner, \" \"), React.createElement(Table, {\n      bordered: true,\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Metric \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" Metric Calculations \"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, metricElements)), React.createElement(MetricMonthly, {\n      metricCalcIDs: this.state.metricAreaCalculationsMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(MetricQuarterly, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(MetricAnnuals, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n} // Represents a single row in the metric/metric calculations table\n// Contains all metric name and metric calculation names for a metric area\n\nclass MetricCalculationRow extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.props.metrics), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.props.metricCalc));\n  }\n\n}\n\nclass MetricMonthly extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    console.log(\"Component mounted!\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) // <div>\n    //     <h1>{this.props.metricCalcIDs}</h1>\n    //     <h2>{this.props.quarter}</h2>\n    //     <Table responsive>\n    //         <tbody>\n    //             <tr>\n    //                 <th>Actual</th>\n    //                 <th>Target</th>\n    //             </tr>\n    //             <tr>\n    //                 <th>{this.props.actual}</th>\n    //                 <th>{this.props.target}</th>\n    //             </tr>\n    //         </tbody>\n    //     </Table>\n    // </div>\n    ;\n  }\n\n} // // Represents a single month metric component\n// class MetricMonthRow extends Component {\n//     constructor(props) {\n//         super(props);\n//     }\n// }\n\n\nclass MetricQuarterly extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Actual\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Target\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.props.actual), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, this.props.target)))));\n  }\n\n}\n\nclass MetricAnnuals extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Actual\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Target\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Highlights\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Lowlights\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Correction of Error\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, this.props.actual), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, this.props.target), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.props.highlight), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, this.props.lowlight), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, this.props.correction)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/nathan/go/src/insightful/insightful/src/DashBoard.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Table","Button","ButtonGroup","ButtonToolbar","Card","CardImg","CardText","CardBody","CardTitle","CardDeck","CardGroup","firebase","DashBoard","constructor","props","renderMetricMonthly","rootPath","database","ref","monthMap","Map","once","snapshot","info","val","keys","Object","map","key","intKey","parseInt","metricAreaCalculationIDs","includes","set","console","log","setMonthCalculations","state","metricAreaCalculationsMonth","componentDidMount","setState","render","metricElements","Array","from","metricAreaCalculations","entries","metric","metricCalculation","metricMonthlies","metricAreaInfo","metricAreaID","metricAreaOwner","MetricCalculationRow","metrics","metricCalc","MetricMonthly","MetricQuarterly","actual","target","MetricAnnuals","highlight","lowlight","correction"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport { Table, Button, ButtonGroup, ButtonToolbar} from 'reactstrap';\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardGroup } from 'reactstrap';\r\n\r\nimport './index.js';\r\nimport './css/DashBoard.css';\r\n\r\nimport firebase from 'firebase/app';\r\n\r\nexport class DashBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            metricAreaCalculationsMonth: new Map()\r\n        }\r\n    }\r\n\r\n    // Do any information retrieval here\r\n    componentDidMount() {\r\n        this.renderMetricMonthly()\r\n    }\r\n\r\n    setMonthCalculations(map) {\r\n        this.setState((state) => {\r\n            console.log(map)\r\n            state.metricAreaCalculationsMonth = map\r\n            return state\r\n        })\r\n    }\r\n\r\n    renderMetricMonthly = () => {\r\n        let rootPath = firebase.database().ref('metricGoalsMonths')\r\n        let monthMap = new Map()\r\n\r\n        rootPath.once('value', (snapshot) => {\r\n            let info = snapshot.val();\r\n            let keys = Object.keys(info);\r\n            keys.map((key) => {\r\n                let intKey = parseInt(key, 10)\r\n                // If the our prop of metric calculation IDs contains the ID, add it to the month map.\r\n                if (this.props.metricAreaCalculationIDs.includes(intKey)) {\r\n                    monthMap.set(key, info[key])\r\n                }\r\n            })\r\n\r\n            console.log(monthMap)\r\n\r\n            this.setMonthCalculations(monthMap)\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let metricElements = Array.from(this.props.metricAreaCalculations.entries()).map((key) => {\r\n            //Pass metricName, metricID into metricAreaCard as props then also pass in a list of props containing information about that specific metric\r\n            return <MetricCalculationRow\r\n                    metrics={key[1].metric}\r\n                    metricCalc={key[1].metricCalculation}\r\n                    />\r\n        })\r\n\r\n        let metricMonthlies = Array.from(this.state.metricAreaCalculationsMonth.entries()).map((key) => {\r\n            return <MetricMonthly/>\r\n        })\r\n    \r\n        return(        \r\n            <div className = \"body\">\r\n            <h1> {this.props.metricAreaInfo} </h1>\r\n            <h1> {this.props.metricAreaID} </h1>\r\n            <h2> Metric Area Summary </h2>\r\n            <h3> Owner: {this.props.metricAreaOwner} </h3>\r\n\r\n            <Table bordered align=\"center\">\r\n                <thead>\r\n                    <tr>\r\n                    <th> Metric </th>\r\n                    <th> Metric Calculations </th>\r\n\r\n                    </tr>\r\n                </thead>\r\n\r\n\r\n                {/* Table representing metric and metric caluclation */}\r\n                <tbody>\r\n                    {metricElements}\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n            {/* Monthly Information */}\r\n            {\r\n            <MetricMonthly\r\n                metricCalcIDs={this.state.metricAreaCalculationsMonth}/>\r\n            }\r\n\r\n            {/* Quarterly Information */}\r\n            {\r\n            <MetricQuarterly>\r\n\r\n            </MetricQuarterly>\r\n            }\r\n            {/* Yearly Information */}\r\n            {\r\n            <MetricAnnuals>\r\n\r\n            </MetricAnnuals>\r\n            }\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Represents a single row in the metric/metric calculations table\r\n// Contains all metric name and metric calculation names for a metric area\r\nclass MetricCalculationRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <th>\r\n                    {this.props.metrics}\r\n                </th>\r\n                <th>\r\n                    {this.props.metricCalc}\r\n                </th>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass MetricMonthly extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Component mounted!\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            // <div>\r\n            //     <h1>{this.props.metricCalcIDs}</h1>\r\n            //     <h2>{this.props.quarter}</h2>\r\n            //     <Table responsive>\r\n            //         <tbody>\r\n            //             <tr>\r\n            //                 <th>Actual</th>\r\n            //                 <th>Target</th>\r\n            //             </tr>\r\n            //             <tr>\r\n            //                 <th>{this.props.actual}</th>\r\n            //                 <th>{this.props.target}</th>\r\n            //             </tr>\r\n            //         </tbody>\r\n            //     </Table>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\n// // Represents a single month metric component\r\n// class MetricMonthRow extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//     }\r\n// }\r\n\r\nclass MetricQuarterly extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table responsive>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Actual</th>\r\n                            <th>Target</th>\r\n                            {/* <th>Highlights</th>\r\n                            <th>Lowlights</th>\r\n                            <th>Correction of Error</th> */}\r\n                        </tr>\r\n                        <tr>\r\n                            <th>{this.props.actual}</th>\r\n                            <th>{this.props.target}</th>\r\n                            {/* <th>{this.props.highlight}</th>\r\n                            <th>{this.props.lowlight}</th>\r\n                            <th>{this.props.correction}</th> */}\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass MetricAnnuals extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Actual</th>\r\n                            <th>Target</th>\r\n                            <th>Highlights</th>\r\n                            <th>Lowlights</th>\r\n                            <th>Correction of Error</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>{this.props.actual}</th>\r\n                            <th>{this.props.target}</th>\r\n                            <th>{this.props.highlight}</th>\r\n                            <th>{this.props.lowlight}</th>\r\n                            <th>{this.props.correction}</th>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}